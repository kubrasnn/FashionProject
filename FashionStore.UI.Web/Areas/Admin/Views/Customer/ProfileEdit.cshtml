
@{
    ViewBag.Title = "Profil";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
@model FashionStore.UI.Web.Areas.Admin.Models.ProfileEditViewModel

<div class="container-fluid">
    <div class="row bg-title">
        <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">
            <h4 class="page-title">Profilim</h4>
        </div>
        <div class="col-lg-9 col-sm-8 col-md-8 col-xs-12">
            <ol class="breadcrumb">
                <li><a href="/Admin/Home">Dashboard</a></li>
                <li class="active">Profilim</li>
            </ol>
        </div>
    </div>
    <!-- /.row -->
    <!-- .row -->
    <div class="row">
        <div class="col-md-12">
            <div class="white-box">
                <h2 class="box-title m-b-0">Profil Düzenle</h2>
                <a class="btn btn-primary waves-effect waves-light" data-toggle="modal" data-target="#responsive-modal" type="button"><span class="btn-label"><i class="fa fa-question-circle"></i></span>Parola Değiştir</a>
                <hr />
                <div>
                    <div id="validation-result-success" class="alert alert-success" style="display: none"></div>
                    @if (ViewBag.IsSuccess != null && ViewBag.IsSuccess == true)
                    {
                        <div class="alert alert-success">@ViewBag.Message</div>
                    }
                    else if (ViewBag.IsSuccess != null && ViewBag.IsSuccess == false)
                    {
                        <div class="alert alert-danger">@ViewBag.Message</div>
                    }
                </div>

                <div id="responsive-modal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                                <h4 class="modal-title">Parola Değişirme</h4>
                            </div>
                            <div class="modal-body">
                                @using (Html.BeginForm("PasswordChange", "Customer"))
                                {
                                    @Html.AntiForgeryToken()
                                    <div class="form-group">
                                        <label class="control-label">Parola</label>
                                        @Html.PasswordFor(x => x.PasswordChangeModel.Password, new { @class = "form-control" })
                                        <div style="color:red;">
                                            @Html.ValidationMessageFor(x => x.PasswordChangeModel.Password)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">Parola Tekrar</label>
                                        @Html.PasswordFor(x => x.PasswordChangeModel.PasswordConfirm, new { @class = "form-control" })
                                        <div style="color:red;">
                                            @Html.ValidationMessageFor(x => x.PasswordChangeModel.PasswordConfirm)
                                        </div>

                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-default waves-effect" data-dismiss="modal">Kapat</button>
                                        <button type="submit" class="btn btn-danger waves-effect waves-light">Güncelle</button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane active">
                    @using (Html.BeginForm("ProfileEdit", "Customer", FormMethod.Post, new { @class = "form-horizontal form-material", @enctype = "multipart/form-data", @data_toggle = "validator" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(x => x.CustomerPicture.Customer.Id)
                        <div class="form-group">
                            <div class="col-md-9">
                                <div class="form-group">
                                    <label class="col-md-12">Ad</label>
                                    <div class="col-md-12">
                                        @Html.TextBoxFor(x => x.CustomerPicture.Customer.Name, new { @class = "form-control form-control-line" })
                                        <div style="color:red;">
                                            @Html.ValidationMessageFor(x => x.CustomerPicture.Customer.Name)
                                        </div>

                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-12">Soyad</label>
                                    <div class="col-md-12">
                                        @Html.TextBoxFor(x => x.CustomerPicture.Customer.Surname, new { @class = "form-control form-control-line" })
                                        <div style="color:red;">
                                            @Html.ValidationMessageFor(x => x.CustomerPicture.Customer.Surname)
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-12">Email</label>
                                    <div class="col-md-12">
                                        @Html.TextBoxFor(x => x.CustomerPicture.Customer.Email, new { @class = "form-control form-control-line", @type = "email" })
                                        <div style="color:red;">
                                            @Html.ValidationMessageFor(x => x.CustomerPicture.Customer.Email)
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-sm-12">
                                        <button type="submit" class="btn btn-success">Profili Güncelle</button>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="col-md-12"> Profil Resmi</label>
                                    <blockquote id="uploadvalidate" style="display: none">Profil resminiz başarıyla güncellendi.</blockquote>
                                    <div class="product-img">
                                        <img src="/Uploads/@Model.CustomerPicture.Picture.PicturePath" alt="@Model.CustomerPicture.Picture.AltAttribute" title="@Model.CustomerPicture.Picture.TitleAttribute" id="profilephoto">
                                        <br />
                                        <div class="pro-img-overlay"> <a id="profilphotosil" onclick="DeletePhoto()" class="bg-danger"><i class="ti-trash"></i></a></div>
                                        <div class="fileupload btn btn-info waves-effect waves-light" style="margin-top: 10px;">
                                            <span><i class="ion-upload m-r-5"></i>Profil Resmi Yükle</span>
                                            <input onchange="Save()" type="file" class="upload" name="profilphoto" id="profilphoto">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    }
                </div>
            </div>
        </div>
    </div>
    <!-- /.row -->
</div>

@section scripts
{
    <script>
        function Save() {
            var formData = new FormData();
            var totalFiles = document.getElementById("profilphoto").files.length;
            for (var i = 0; i < totalFiles; i++) {
                var file = document.getElementById("profilphoto").files[i];
                formData.append("profilphoto", file);
            }
            $.ajax({
                type: "POST",
                url: '/Customer/ProfilPhotoUpload',
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (response) {
                    $("img#profilephoto").attr("src", "/Uploads/" + response);
                    $("#validation-result-success").text("Profil resminiz başarıyla güncellendi.");
                    $("#validation-result-success").fadeIn();
                    $("#validation-result-success").delay(5000).fadeOut();
                }
            });
        }
        function DeletePhoto() {
            $.ajax({
                type: "GET",
                url: '/Customer/ProfilPhotoDelete',
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (response) {
                    $("img#profilephoto").attr("src", "/Uploads/" + response);
                    $("#validation-result-success").text("Profil resminiz başarıyla kaldırıldı.");
                    $("#validation-result-success").fadeIn("slow");
                    $("#validation-result-success").delay(5000).fadeOut();
                }
            });
        }
    </script>
}
