@model FashionStore.UI.Web.Areas.Admin.Models.CustomerEditViewModel

@{
    ViewBag.Title = "Kullanıcı Düzenle" + Model.Customer.Name + " " +Model.Customer.Surname;
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
@section styles
{
    <link href="~/AdminTemplate/plugins/bower_components/footable/css/footable.core.css" rel="stylesheet">
    <link href="~/AdminTemplate/plugins/bower_components/bootstrap-select/bootstrap-select.min.css" rel="stylesheet" />
    <link href="/AdminTemplate/plugins/bower_components/bootstrap-datepicker/bootstrap-datepicker.min.css" rel="stylesheet" type="text/css">
}
<div class="container-fluid">
    <div class="row bg-title">
        <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">
            <h4 class="page-title">Kullanıcı Bilgileri Düzenle - @Model.Customer.Name @Model.Customer.Surname</h4>
        </div>
        <div class="col-lg-9 col-sm-8 col-md-8 col-xs-12">
            <ol class="breadcrumb">
                <li><a href="Admin/Home">Dashboard</a></li>
                <li><a href="/Admin/Customer/List">Kullanıcı Yönetimi</a></li>
                <li class="active">Kullanıcı Düzenle</li>
            </ol>
        </div>
    </div>
    <!-- /.row -->
    <!-- .row -->
    <div class="row">
        <div class="col-md-12">
            <div class="white-box">
                <h2 class="box-title m-b-0">Kullanıcı Bilgileri Düzenleme Formu</h2>
                <a class="btn btn-primary waves-effect waves-light" data-toggle="modal" data-target="#responsive-modal" type="button"><span class="btn-label"><i class="fa fa-question-circle"></i></span>Parola Değiştir</a>
                @if (Model.Customer.Email == User.Identity.Name)
                {
                    <button class="btn btn-danger waves-effect waves-light" data-toggle="modal" data-target="#delete-modal" disabled="true"><span class="btn-label"><i class="fa fa-trash"></i></span>Kullanıcıyı Sil</button>
                }
                else
                {
                    <a class="btn btn-danger waves-effect waves-light" data-toggle="modal" data-target="#delete-modal" type="button"><span class="btn-label"><i class="fa fa-trash"></i></span>Kullanıcıyı Sil</a>
                }

                <hr />
                @Html.Partial("_PartialValidationResult")
                <div id="responsive-modal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                                <h4 class="modal-title">Parola Değişirme</h4>
                            </div>
                            <div class="modal-body">
                                @using (Html.BeginForm("CustomerPasswordChange", "Customer", FormMethod.Post))
                                {
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="CustomerId" value="@Model.Customer.Id" />
                                    <div class="form-group">
                                        <label class="control-label">Parola</label>
                                        @Html.PasswordFor(x => x.PasswordChangeModel.Password, new { @class = "form-control" })
                                        <div style="color:red;">
                                            @Html.ValidationMessageFor(x => x.PasswordChangeModel.Password)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">Parola Tekrar</label>
                                        @Html.PasswordFor(x => x.PasswordChangeModel.PasswordConfirm, new { @class = "form-control" })
                                        <div style="color:red;">
                                            @Html.ValidationMessageFor(x => x.PasswordChangeModel.PasswordConfirm)
                                        </div>

                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-default waves-effect" data-dismiss="modal">Kapat</button>
                                        <button type="submit" class="btn btn-danger waves-effect waves-light">Güncelle</button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div id="delete-modal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                                <h4 class="modal-title">Kullanıcı Sil</h4>
                            </div>
                            <div class="modal-body">
                                <h3>Kullanıcı silme işlemine eminseniz aşağıdan sil butonuna basınız.</h3>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-default waves-effect" data-dismiss="modal">Kapat</button>
                                    <a href="/Admin/Customer/CustomerDelete/@Model.Customer.Id" class="btn btn-danger waves-effect">Sil</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane active">
                    @using (Html.BeginForm("Edit", "Customer", FormMethod.Post, new { @class = "form-horizontal form-material", @data_toggle = "validator" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(x => x.Customer.Id)
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Ad</label>
                                    <div class="col-md-12">
                                        @Html.TextBoxFor(x => x.Customer.Name, new { @class = "form-control form-control-line" })
                                        <div style="color:red;">
                                            @Html.ValidationMessageFor(x => x.Customer.Name)
                                        </div>

                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-12">Soyad</label>
                                    <div class="col-md-12">
                                        @Html.TextBoxFor(x => x.Customer.Surname, new { @class = "form-control form-control-line" })
                                        <div style="color:red;">
                                            @Html.ValidationMessageFor(x => x.Customer.Surname)
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-12">Email</label>
                                    <div class="col-md-12">
                                        @if (Model.Customer.Email == User.Identity.Name)
                                        {
                                            @Html.TextBoxFor(x => x.Customer.Email, new { @class = "form-control form-control-line", @type = "email", disabled = "true" })
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(x => x.Customer.Email, new { @class = "form-control form-control-line", @type = "email" })
                                        }
                                        <div style="color: red;">
                                            @Html.ValidationMessageFor(x => x.Customer.Email)
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-12">Doğum Tarihi</label>
                                    <div class="col-md-4">
                                        <div class="input-group">
                                            @Html.TextBoxFor(x => x.Customer.DateOfBirth, new { @class = "form-control mydatepicker", @placeholder = "gg/aa/yyyy", Value = Model.Customer.DateOfBirth.ToShortDateString() })
                                            <span class="input-group-addon"><i class="icon-calender"></i></span>
                                        </div>
                                        <div style="color: red;">
                                            @Html.ValidationMessageFor(x => x.Customer.DateOfBirth)
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <label class="col-md-12">Durum</label>
                                        <div class="col-md-12">
                                            @Html.DropDownListFor(x => x.Customer.Active, ViewBag.isActive as SelectList, new { @class = "form-control" })
                                            <div style="color:red;">
                                                @Html.ValidationMessageFor(x => x.Customer.Active)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="col-md-12">Yetki</label>
                                        <div class="col-md-12">
                                            @Html.DropDownListFor(x => x.Customer.CustomerRoleId, ViewBag.CustomerRoles as SelectList, new { @class = "form-control" })
                                            <div style="color:red;">
                                                @Html.ValidationMessageFor(x => x.Customer.CustomerRoleId)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-sm-12">
                                        <button type="submit" class="btn btn-success">Profili Güncelle</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                    }
                </div>
            </div>
        </div>
    </div>
    <!-- /.row -->
    <!-- .row -->
    <div class="row">
        <div class="col-lg-12">
            <div class="white-box">
                <h2 class="box-title m-b-0">@Model.Customer.Name @Model.Customer.Surname - Adres Listesi</h2>
                <hr />
                <table id="demo-foo-addrow" class="table table-bordered table-hover toggle-circle" data-page-size="7">
                    <thead>
                        <tr>
                            <th data-sort-initial="true" data-toggle="true">Ad Soyad</th>
                            <th>Email</th>
                            <th data-hide="phone, tablet">Telefon</th>
                            <th data-hide="phone, tablet">İl</th>
                            <th data-hide="phone, tablet">İlçe</th>
                            <th data-hide="phone, tablet">Adres</th>
                            <th data-sort-ignore="true" class="min-width" style="text-align: center;">İşlem</th>
                        </tr>
                    </thead>
                    <div class="form-inline padding-bottom-15">
                        <div class="row">
                            <div class="col-sm-6 text-left m-b-20">
                                <div class="form-group">
                                    <input id="demo-input-search2" type="text" placeholder="Arama..." class="form-control" autocomplete="off">
                                </div>
                            </div>
                            <div class="col-sm-6 text-right">
                                <a class="btn btn-info waves-effect waves-light" data-toggle="modal" data-target="#address-modal" type="button"><span class="btn-label"><i class="fa fa-plus"></i></span>Adres Bilgisi Ekle</a>
                            </div>
                        </div>
                    </div>
                    <tbody>
                        @if (Model.Addresses.Count > 0)
                        {
                            foreach (var adres in Model.Addresses)
                            {
                                <tr>
                                    <td>@adres.FirstName @adres.LastName</td>
                                    <td>@adres.Email</td>
                                    <td>@adres.PhoneNumber</td>
                                    <td>@adres.City</td>
                                    <td>@adres.Town</td>
                                    <td>@adres.Address1</td>
                                    <td style="text-align: center;">
                                        <a href="/Admin/Customer/AddressEdit/@adres.Id" class="btn btn-primary btn-rounded waves-effect waves-light" type="button"><span class="btn-label"><i class="fa fa-edit"></i></span>Düzenle</a>
                                        <a href="/Admin/Customer/AddressDelete/@adres.Id" class="btn btn-danger btn-rounded waves-effect waves-light" type="button"><span class="btn-label"><i class="fa fa-trash"></i></span>Sil</a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <h3 style="color:firebrick ">Adres Bilgisi Bulunmamaktadır.</h3>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="7">
                                <div class="text-right">
                                    <ul class="pagination"></ul>
                                </div>
                            </td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
    <div id="address-modal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    <h4 class="modal-title">Adres Ekle</h4>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("AddressAdd", "Customer"))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(x => x.Address.CustomerId, new { Value = @Model.Customer.Id })
                        <div class="form-group">
                            <label class="control-label">Ad</label>
                            @Html.TextBoxFor(x => x.Address.FirstName, new { @class = "form-control" })
                            <div style="color:red;">
                                @Html.ValidationMessageFor(x => x.Address.FirstName)
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label">Soyad</label>
                            @Html.TextBoxFor(x => x.Address.LastName, new { @class = "form-control" })
                            <div style="color:red;">
                                @Html.ValidationMessageFor(x => x.Address.LastName)
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label">Email</label>
                            @Html.TextBoxFor(x => x.Address.Email, new { @class = "form-control", @type = "email" })
                            <div style="color:red;">
                                @Html.ValidationMessageFor(x => x.Address.Email)
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label">Telefon</label>
                            @Html.TextBoxFor(x => x.Address.PhoneNumber, new { @class = "form-control" })
                            <div style="color:red;">
                                @Html.ValidationMessageFor(x => x.Address.PhoneNumber)
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label">İl</label>
                            @Html.TextBoxFor(x => x.Address.Town, new { @class = "form-control" })
                            <div style="color:red;">
                                @Html.ValidationMessageFor(x => x.Address.Town)
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label">İlçe</label>
                            @Html.TextBoxFor(x => x.Address.City, new { @class = "form-control" })
                            <div style="color:red;">
                                @Html.ValidationMessageFor(x => x.Address.City)
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label">Adres</label>
                            @Html.TextAreaFor(x => x.Address.Address1, new { @class = "form-control" })
                            <div style="color:red;">
                                @Html.ValidationMessageFor(x => x.Address.Address1)
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label">Adres (Devam)</label>
                            @Html.TextAreaFor(x => x.Address.Address2, new { @class = "form-control" })
                            <div style="color:red;">
                                @Html.ValidationMessageFor(x => x.Address.Address2)
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label">Posta Kodu</label>
                            @Html.TextBoxFor(x => x.Address.PostalCode, new { @class = "form-control" })
                            <div style="color:red;">
                                @Html.ValidationMessageFor(x => x.Address.PostalCode)
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default waves-effect" data-dismiss="modal">Kapat</button>
                            <button type="submit" class="btn btn-primary waves-effect waves-light">Kaydet</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts
{

    <!-- Footable -->
    <script src="~/AdminTemplate/plugins/bower_components/footable/js/footable.all.min.js"></script>
    <script src="~/AdminTemplate/plugins/bower_components/bootstrap-select/bootstrap-select.min.js" type="text/javascript"></script>
    <!--FooTable init-->
    <script src="~/AdminTemplate/js/footable-init.js"></script>
    <script src="/AdminTemplate/plugins/bower_components/bootstrap-datepicker/bootstrap-datepicker.min.js"></script>
    <script>
        //Date Picker

        $.fn.datepicker.dates['tr'] = {
            days: ["Pazar", "Pazartesi", "Salı", "Çarşamba", "Perşembe", "Cuma", "Cumartesi"],
            daysShort: ["Pz", "Pt", "Sa", "Ça", "Pe", "Cu", "Ct"],
            daysMin: ["Pz", "Pt", "Sa", "Ça", "Pe", "Cu", "Ct"],
            months: ["Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran",
                "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık"],
            monthsShort: ["Oca", "Şub", "Mar", "Nis", "May", "Haz",
                "Tem", "Ağu", "Eyl", "Eki", "Kas", "Ara"],
            today: "Bugün",
            clear: "Temizle",
            format: "dd/mm/yyyy",
            titleFormat: "MM yyyy", /* Leverages same syntax as 'format' */
            weekStart: 1
        };

        $('.mydatepicker, #datepicker').datepicker({
            autoclose: true,
            todayBtn: "linked",
            language: "tr",
            todayHighlight: true
        });
        jQuery('#datepicker-autoclose').datepicker({
            autoclose: true,
            todayHighlight: true
        });

        jQuery('#date-range').datepicker({
            toggleActive: true
        });
        jQuery('#datepicker-inline').datepicker({

            todayHighlight: true
        });
    </script>
}

